
@{
    ViewBag.Title = "AddToCart";
    Layout = "~/Views/Shared/_LayoutCinema.cshtml";
}

<div>

    <h4>RoomSeats</h4>
    <hr />


    <table class="seat-picker">
        <tr>
            <td colspan="13" style="text-align: center;">
                <div class="seat-square" style="background-color: green; color: white;">N</div><span>Normal Seat</span>
                <div class="seat-square" style="background-color: red; color: white;">V</div><span>VIP Seat</span>
                <div class="seat-square" style="background-color: purple; color: white;">S</div><span>Selected Seat</span>
            </td>
        </tr>
        @for (int i = 0; i < 10; i++) // loop over the rows (assuming there are 10 rows)
        {
            <tr>
                <td class="row-label">@((char)(i + 65))</td>
                @for (int j = i * 13; j < (i + 1) * 13 && j < ViewBag.RoomSeats.Count; j++) // loop over the RoomSeats list until the end of the row or the end of the list
                {
                    var roomSeat = ViewBag.RoomSeats[j]; // get the corresponding RoomSeats object
                    bool isAvailable = roomSeat.isAvailable; // determine whether the seat is available or not

                    <td>
                        <div class="seat-square @(isAvailable ? "available" : "unavailable") @(roomSeat.Seats.isVipSeat ? "vip" : "")" data-seatname="@roomSeat.Seats.seatName" onclick="toggleSeat(this)">
                            <span>@roomSeat.Seats.seatName</span>
                        </div>
                    </td>
                }
            </tr>
        }
    </table>

</div>

<table class="cart-table">
    <thead>
        <tr>
            <th>Seat</th>
            <th>Room</th>
            <th>Movie Name</th>
            <th>Reserved Time</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody id="cart-items"></tbody>
    <tfoot>
        <tr>
            <td colspan="4" style="text-align: right;">
                <button onclick="clearCart()">Clear Cart</button>
                <button onclick="submitOrder()">Submit Order</button>
            </td>
        </tr>
    </tfoot>
</table>

<style>
    .seat-picker {
        border-collapse: collapse;
        margin: 20px auto;
    }

        .seat-picker td {
            padding: 5px;
            vertical-align: middle;
        }

            .seat-picker td:nth-child(-n+6) {
                padding-left: 20px;
            }

        .seat-picker .row-label {
            font-weight: bold;
            width: 30px;
            padding-left: 20px;
        }

    .seat-square {
        display: inline-block;
        width: 30px;
        height: 30px;
        border: 1px solid black;
        margin: 1px;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
    }

        .seat-square span {
            font-size: smaller;
        }

        .seat-square.available {
            background-color: green;
            color: white;
        }

        .seat-square.unavailable {
            background-color: red;
            color: white;
            cursor: not-allowed;
        }

        .seat-square.selected {
            background-color: purple;
            color: white;
        }

        .seat-square.vip {
            background-color: red;
            color: white;
        }


    .legend-container {
        display: flex;
        justify-content: center;
    }
</style>

<script>

function toggleSeat(seat) {
    if (seat.classList.contains("unavailable")) {
        return; // do nothing if the seat is unavailable
    }
    if (seat.classList.contains("selected")) {
        seat.classList.remove("selected"); // deselect the seat if it's already selected
        if (seat.classList.contains("vip")) {
            seat.style.backgroundColor = "red"; // set the background color to red for VIP seats
        } else {
            seat.style.backgroundColor = ""; // reset the background color for normal seats
        }
        removeItemFromCart(seat.getAttribute("data-seatname")); // remove the corresponding item from the cart
    } else {
        seat.classList.add("selected"); // select the seat if it's not already selected
        seat.style.backgroundColor = "purple"; // set the background color to purple for selected seats
        var isVipSeat = seat.classList.contains("vip"); // determine whether the seat is a VIP seat or not
        addItemToCart(seat.getAttribute("data-seatname"), "@ViewBag.Screening.roomId", "@ViewBag.Screening.Movies.movieTitle", "@ViewBag.Screening.reservedTime", isVipSeat); // add the corresponding item to the cart
    }
}

function addItemToCart(seatName, roomId, movieTitle, reservedTime, isVipSeat) {
    var price = isVipSeat ? @ViewBag.Screening.price + 20000 : @ViewBag.Screening.price; // calculate the price based on whether the seat is a VIP seat or not
    var cartItems = document.getElementById("cart-items");
    var newRow = document.createElement("tr");
    newRow.innerHTML = "<td>" + seatName + "</td><td>" + roomId + "</td><td>" + movieTitle + "</td><td>" + reservedTime + "</td><td>" + price + "</td>";
    cartItems.appendChild(newRow);
}

function removeItemFromCart(seatName) {
    var cartItems = document.getElementById("cart-items");
    var rows = cartItems.getElementsByTagName("tr");
    for (var i = 0; i < rows.length; i++) {
        var cells = rows[i].getElementsByTagName("td");
        if (cells[0].innerHTML === seatName) { // check if the seat name matches
            cartItems.removeChild(rows[i]); // remove the row from the cart
            break;
        }
    }
}

function clearCart() {
    var cartItems = document.getElementById("cart-items");
    cartItems.innerHTML = ""; // remove all items from the cart

    // deselect all selected seats
    var selectedSeats = document.querySelectorAll(".selected");
    for (var i = 0; i < selectedSeats.length; i++) {
        var seat = selectedSeats[i];
        seat.classList.remove("selected");
        if (seat.classList.contains("vip")) {
            seat.style.backgroundColor = "red"; // set the background color to red for VIP seats
        } else {
            seat.style.backgroundColor = ""; // reset the background color for normal seats
        }
    }
}

function submitOrder() {
    var cartItems = document.getElementById("cart-items");
    if (cartItems.getElementsByTagName("tr").length == 0) { // check if there are any items in the cart
        alert("Your cart is empty!"); // show an alert message if the cart is empty
    } else {
        // TODO: implement order submission logic
    }
}

</script>
